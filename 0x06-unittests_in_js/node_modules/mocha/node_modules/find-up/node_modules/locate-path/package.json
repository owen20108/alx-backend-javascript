{
  "name": "locate-path",
  "version": "6.0.0",
  "description": "Get the first path that exists on disk of multiple paths",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/locate-path"
  },
  "funding": "https://github.com/sponsors/sindresorhus",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "https://sindresorhus.com"
  },
  "engines": {
    "node": ">=10"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "keywords": [
    "locate",
    "path",
    "paths",
    "file",
    "files",
    "exists",
    "find",
    "finder",
    "search",
    "searcher",
    "array",
    "iterable",
    "iterator"
  ],
  "dependencies": {
    "p-locate": "^5.0.0"
  },
  "devDependencies": {
    "ava": "^2.4.0",
    "tsd": "^0.13.1",
    "xo": "^0.32.1"
  },
  "readme": "# locate-path [![Build Status](https://travis-ci.com/sindresorhus/locate-path.svg?branch=master)](https://travis-ci.com/github/sindresorhus/locate-path)\n\n> Get the first path that exists on disk of multiple paths\n\n## Install\n\n```\n$ npm install locate-path\n```\n\n## Usage\n\nHere we find the first file that exists on disk, in array order.\n\n```js\nconst locatePath = require('locate-path');\n\nconst files = [\n\t'unicorn.png',\n\t'rainbow.png', // Only this one actually exists on disk\n\t'pony.png'\n];\n\n(async () => {\n\tconsole(await locatePath(files));\n\t//=> 'rainbow'\n})();\n```\n\n## API\n\n### locatePath(paths, options?)\n\nReturns a `Promise<string>` for the first path that exists or `undefined` if none exists.\n\n#### paths\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `object`\n\n##### concurrency\n\nType: `number`\\\nDefault: `Infinity`\\\nMinimum: `1`\n\nNumber of concurrently pending promises.\n\n##### preserveOrder\n\nType: `boolean`\\\nDefault: `true`\n\nPreserve `paths` order when searching.\n\nDisable this to improve performance if you don't care about the order.\n\n##### cwd\n\nType: `string`\\\nDefault: `process.cwd()`\n\nCurrent working directory.\n\n##### type\n\nType: `string`\\\nDefault: `'file'`\\\nValues: `'file' | 'directory'`\n\nThe type of paths that can match.\n\n##### allowSymlinks\n\nType: `boolean`\\\nDefault: `true`\n\nAllow symbolic links to match if they point to the chosen path type.\n\n### locatePath.sync(paths, options?)\n\nReturns the first path that exists or `undefined` if none exists.\n\n#### paths\n\nType: `Iterable<string>`\n\nPaths to check.\n\n#### options\n\nType: `object`\n\n##### cwd\n\nSame as above.\n\n##### type\n\nSame as above.\n\n##### allowSymlinks\n\nSame as above.\n\n## Related\n\n- [path-exists](https://github.com/sindresorhus/path-exists) - Check if a path exists\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-locate-path?utm_source=npm-locate-path&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/locate-path/issues"
  },
  "_id": "locate-path@6.0.0",
  "dist": {
    "shasum": "fafce9e58594259de15c6ce493715f7fc002ef81"
  },
  "_from": "locate-path@^6.0.0",
  "_resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz"
}
