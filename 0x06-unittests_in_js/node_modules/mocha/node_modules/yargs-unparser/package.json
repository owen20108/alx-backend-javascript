{
  "name": "yargs-unparser",
  "description": "Converts back a yargs argv object to its original array form",
  "version": "2.0.0",
  "keywords": [
    "yargs",
    "unparse",
    "expand",
    "inverse",
    "argv"
  ],
  "author": {
    "name": "AndrÃ© Cruz",
    "email": "andre@moxy.studio"
  },
  "engines": {
    "node": ">=10"
  },
  "homepage": "https://github.com/yargs/yargs-unparser",
  "repository": {
    "type": "git",
    "url": "git://github.com/yargs/yargs-unparser"
  },
  "license": "MIT",
  "main": "index.js",
  "files": [],
  "scripts": {
    "lint": "eslint .",
    "fix": "eslint . --fix",
    "test": "jest --env node --coverage",
    "prerelease": "npm t && npm run lint",
    "precommit": "lint-staged"
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "devDependencies": {
    "eslint": "^6.1.0",
    "eslint-config-moxy": "^7.1.0",
    "husky": "^3.0.1",
    "jest": "^24.9.0",
    "lint-staged": "^9.5.0",
    "minimist": "^1.2.5",
    "yargs-parser": "^18.1.3"
  },
  "dependencies": {
    "camelcase": "^6.0.0",
    "decamelize": "^4.0.0",
    "flat": "^5.0.2",
    "is-plain-obj": "^2.1.0"
  },
  "readme": "# yargs-unparser\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url]\n\n[npm-url]:https://npmjs.org/package/yargs-unparser\n[npm-image]:http://img.shields.io/npm/v/yargs-unparser.svg\n[downloads-image]:http://img.shields.io/npm/dm/yargs-unparser.svg\n\nConverts back a `yargs` argv object to its original array form.\n\nProbably the unparser word doesn't even exist, but it sounds nice and goes well with [yargs-parser](https://github.com/yargs/yargs-parser).\n\nThe code originally lived in [MOXY](https://github.com/moxystudio)'s GitHub but was later moved here for discoverability.\n\n\n## Installation\n\n`$ npm install yargs-unparser`\n\n\n## Usage\n\n```js\nconst parse = require('yargs-parser');\nconst unparse = require('yargs-unparser');\n\nconst argv = parse(['--no-boolean', '--number', '4', '--string', 'foo'], {\n    boolean: ['boolean'],\n    number: ['number'],\n    string: ['string'],\n});\n// { boolean: false, number: 4, string: 'foo', _: [] }\n\nconst unparsedArgv = unparse(argv);\n// ['--no-boolean', '--number', '4', '--string', 'foo'];\n```\n\nThe second argument of `unparse` accepts an options object:\n\n- `alias`: The [aliases](https://github.com/yargs/yargs-parser#requireyargs-parserargs-opts) so that duplicate options aren't generated\n- `default`: The [default](https://github.com/yargs/yargs-parser#requireyargs-parserargs-opts) values so that the options with default values are omitted\n- `command`: The [command](https://github.com/yargs/yargs/blob/master/docs/advanced.md#commands) first argument so that command names and positional arguments are handled correctly\n\n### Example with `command` options\n\n```js\nconst yargs = require('yargs');\nconst unparse = require('yargs-unparser');\n\nconst argv = yargs\n    .command('my-command <positional>', 'My awesome command', (yargs) =>\n        yargs\n        .option('boolean', { type: 'boolean' })\n        .option('number', { type: 'number' })\n        .option('string', { type: 'string' })\n    )\n    .parse(['my-command', 'hello', '--no-boolean', '--number', '4', '--string', 'foo']);\n// { positional: 'hello', boolean: false, number: 4, string: 'foo', _: ['my-command'] }\n\nconst unparsedArgv = unparse(argv, {\n    command: 'my-command <positional>',\n});\n// ['my-command', 'hello', '--no-boolean', '--number', '4', '--string', 'foo'];\n```\n\n### Caveats\n\nThe returned array can be parsed again by `yargs-parser` using the default configuration. If you used custom configuration that you want `yargs-unparser` to be aware, please fill an [issue](https://github.com/yargs/yargs-unparser/issues).\n\nIf you `coerce` in weird ways, things might not work correctly.\n\n\n## Tests\n\n`$ npm test`   \n`$ npm test -- --watch` during development\n\n## Supported Node.js Versions\n\nLibraries in this ecosystem make a best effort to track\n[Node.js' release schedule](https://nodejs.org/en/about/releases/). Here's [a\npost on why we think this is important](https://medium.com/the-node-js-collection/maintainers-should-consider-following-node-js-release-schedule-ab08ed4de71a).\n\n## License\n\n[MIT License](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yargs/yargs-unparser/issues"
  },
  "_id": "yargs-unparser@2.0.0",
  "dist": {
    "shasum": "668035cff7ed74f312a1996e4b994b5e852f7852"
  },
  "_from": "yargs-unparser@2.0.0",
  "_resolved": "https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz"
}
